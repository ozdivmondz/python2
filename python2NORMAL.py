# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]

from math import sqrt

random_list = [i + 1 for i in range(-10, 10)]
new_list = [4,11,91,72,25,2,121]
for each in random_list:
    if each > 0 and (sqrt(each) - int(sqrt(each)) == 0):
        new_list.append(int(sqrt(each)))
print(new_list)



# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)
days_input = int(input('Введите день'))
month_input = int(input('Введите месяц'))
year_input = int(input('и год'))

j = {'day':days_input,'month':month_input,'year':year_input}
print('{}.{}.{}'.format(j['day'],j['month'],j['year']))

if j['day'] == 1:
    print('Первое')
elif j['day'] == 2:
    print('Второе')
elif j['day'] == 3:
    print('третье')
elif j['day'] == 4:
    print('Четвертое')
elif j['day'] == 5:
    print('Пятое')
#И так далее


if j['month'] == 1:
    print('Января')
elif j['month'] == 2:
    print('Февраля')
elif j['month'] == 3:
    print('Марта')

И так далее


print('{} {} {} года'.format(j['day'], j['month'], j['year']))

# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random

from random import *

n = randint(10,30)

random_list = [randint(-100,100) for i in range(n)]
print(random_list)



# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут:
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]

list1 = [3,5,1,2,8,7,7,1,3,2,10,11,2,56,32,56]

print(list(set(list1)))


